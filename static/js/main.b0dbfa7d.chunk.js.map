{"version":3,"sources":["App.tsx","components/GoodList.tsx","index.tsx"],"names":["SortType","GoodList","goods","map","good","goodsFromServer","App","reverse","useState","NONE","sortType","setSortType","isReversed","setIsReversed","visibleGoods","sort","good1","good2","ALPHABET","localeCompare","LENGTH","length","getReorderedGoods","setSort","sortTypeBy","className","type","classNames","onClick","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0ECbQC,EAA4B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1C,OACE,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAe,UAAQ,OAAvB,SACGA,GADMA,SDJJC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGL,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAqCE,IAAMM,EAAM,WACjB,IAUoBC,EAVpB,EAAgCC,mBAASR,EAASS,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAEMC,EA9BD,SACLZ,EADK,GAGJ,IADCQ,EACF,EADEA,SAAUE,EACZ,EADYA,WAENE,EAAY,YAAOZ,GAmBzB,OAjBAY,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQP,GACN,KAAKV,EAASkB,SACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKjB,EAASoB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAITT,GACFE,EAAaP,UAGRO,EAOcQ,CACnBjB,EACA,CAAEO,aAAYF,aAGVa,EAAU,SAACC,GAAD,OAA0B,kBAAMb,EAAYa,KAS5D,OACE,mCACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYjB,IAAaV,EAASkB,WAEtCU,QAASL,EAAQvB,EAASkB,UAP5B,iCAYA,wBACEQ,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYjB,IAAaV,EAASoB,SAEtCQ,QAASL,EAAQvB,EAASoB,QAP5B,4BAYA,wBACEM,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAaf,IAEjBgB,SA1CUrB,GA0CWK,EA1CU,kBAAMC,EAAcN,KAmCrD,sBAYGG,IAAaV,EAASS,MAAUG,IACjC,wBACEc,KAAK,SACLD,UAAU,4BACVG,QAjDK,WACfjB,EAAYX,EAASS,MACrBI,GAAc,IA4CN,sBAUJ,cAAC,EAAD,CAAUX,MAAOY,UE1HzBe,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b0dbfa7d.chunk.js","sourcesContent":["import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { GoodList } from './components/GoodList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  isReversed: boolean,\n  sortType: SortType;\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const visibleGoods = getReorderedGoods(\n    goodsFromServer,\n    { isReversed, sortType },\n  );\n\n  const setSort = (sortTypeBy: SortType) => () => setSortType(sortTypeBy);\n\n  const setReverse = (reverse: boolean) => () => setIsReversed(reverse);\n\n  const setReset = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  return (\n    <>\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n            onClick={setSort(SortType.ALPHABET)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-info',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={setSort(SortType.LENGTH)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={setReverse(!isReversed)}\n          >\n            Reverse\n          </button>\n\n          {((sortType !== SortType.NONE) || (isReversed)) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={setReset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <GoodList goods={visibleGoods} />\n      </div>\n    </>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  goods: string[];\n};\n\nexport const GoodList: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul>\n      {goods.map(good => (\n        <li key={good} data-cy=\"Good\">\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default GoodList;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}